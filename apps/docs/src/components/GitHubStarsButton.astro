---
import { createStorage } from 'unstorage';
import fsLiteDriver from 'unstorage/drivers/fs-lite';
import Button from './Button.astro';

const repo = 'papra-hq/papra';

const repoUrl = `https://github.com/${repo}`;
const apiUrl = `https://ungh.cc/repos/${repo}`;

const storage = createStorage<{ stars: number; formattedStars: string }>({
  driver: fsLiteDriver({ base: './.cache/stars' }),
});


async function getStars() {
    const cachedStars = await storage.getItem(repo);

    if (cachedStars) {
        return cachedStars;
    }

    const stars: number = await fetch(apiUrl)
        .then(res => res.json())
        .then(data => data?.repo?.stars);

    const formattedStars = new Intl.NumberFormat('en-US', { notation: 'compact' }).format(stars).toLowerCase();

    await storage.setItem(repo, { stars, formattedStars });

    return { stars, formattedStars };
}

const { stars, formattedStars } = await getStars();
---

<Button as="a" variant="outline" href={repoUrl} target="_blank" rel="noopener noreferrer" class="flex items-center gap-2" size={stars ? undefined : 'icon'} aria-label="GitHub repository">
    <div class="i-tabler-brand-github size-4.5"></div>
    {stars && <span>{formattedStars}</span>}
</Button>
